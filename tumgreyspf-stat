#!/usr/bin/env python
#
#  Display information about the entries in the greylist.
#
#  Copyright (c) 2004-2007, Sean Reifschneider, tummy.com, ltd.
#  All Rights Reserved
#  <jafo@tummy.com>

import os
import re
import string
import sys
import time

import syslog

sys.path.append('/usr/local/lib/tumgreyspf')
import tumgreyspfsupp


###################
def syslogprint(s):
    print s


syslog.syslog = syslogprint


##################################
def visit(configuration, dir_name, file_list):
    base = configuration['greylistBasedir']
    rx = re.compile(r'^/?(\d+)/(\d+)/(\d+)/(\d+)/greylist/(.*)$')
    if configuration['ignoreLastByte'] > 0:
        rx = re.compile(r'^/?(\d+)/(\d+)/(\d+)/greylist/(.*)$')
    unlinked = 0
    for file in file_list:
        path = os.path.join(dir_name, file)
        if not os.path.isfile(path):
            continue

        recipient = file
        relative = dir_name[len(base):]
        m = rx.match(relative)
        if not m:
            print 'Unknown path "%s" found in greylist directory.' % relative
            continue
        ip = string.join(m.groups()[:-1], '.')
        sender = m.groups()[-1]

        #  look up expration day
        data = {
            'envelope_sender': tumgreyspfsupp.unquote_address(sender),
            'envelope_recipient': tumgreyspfsupp.unquote_address(recipient),
            'client_address': ip,
        }
        config_data = tumgreyspfsupp.lookup_config(
            configuration.get('configPath'), data, configuration.copy())
        expire_time = time.time() - (config_data['GREYLISTEXPIREDAYS'] *
                                     86400)

        #  check
        stat_data = os.stat(path)
        m_time = stat_data[8]
        c_time = stat_data[9]
        now = time.time()

        #  status information
        stats = ''
        if c_time < m_time:
            stats += 'Blocked,'
        if m_time > now:
            stats += 'Pending,'
        if stats:
            stats = ' (%s)' % stats[:-1]

        def pretty_seconds(seconds):
            for prettySeconds, prettyDescription in (
                    (86400, 'd'),
                    (3600, 'h'),
                    (60, 'm'),
            ):
                if seconds > prettySeconds:
                    return (
                        '%d%s' % (seconds / prettySeconds, prettyDescription))
            return '%ss' % seconds

        #  display information
        print ('IP=%s SENDER=%s RECIPIENT=%s STARTS=%s LAST=%s EXPIRESIN=%s%s'
               % (ip, sender, recipient, pretty_seconds(now - m_time),
                  pretty_seconds(now - c_time),
                  pretty_seconds(int(expire_time - now)), stats))


############################
#  main code
config = tumgreyspfsupp.process_config_file()
greylistBasedir = os.path.join(config['greylistDir'], 'client_address')
config['greylistBasedir'] = greylistBasedir
try:
    os.path.walk(greylistBasedir, visit, config)

# ignore interrupts and errors writing stdout
except IOError, e:
    if e.errno != 32:
        raise
except KeyboardInterrupt:
    pass
