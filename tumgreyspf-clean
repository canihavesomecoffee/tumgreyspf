#!/usr/bin/env python
#
#  Walk through the greylist directory and clean out old entries, based on
#  the values in the config file.
#
#  Copyright (c) 2004-2007, Sean Reifschneider, tummy.com, ltd.
#  All Rights Reserved
#  <jafo@tummy.com>

import os
import re
import string
import sys
import time

import syslog

sys.path.append('/usr/local/lib/tumgreyspf')
import tumgreyspfsupp


###################
def syslog_print(s):
    print s


syslog.syslog = syslog_print


##################################
def visit(configuration, dir_name, file_list):
    """
    Loops through all the files in the directory and does an unlink on the
    file if they expired. Also removes empty directories.

    :param configuration: The configuration settings.
    :param dir_name: The current directory.
    :param file_list: The files in the directory.
    :return: nothing.
    """

    base = configuration['greylistBasedir']
    regex = re.compile(r'^/?(\d+)/(\d+)/(\d+)/((\d+)/)?greylist/(.*)$')
    regex_ip = re.compile(r'^/?(\d+)/(\d+)/(\d+)/((\d+)/)?check_file')
    unlinked = 0
    for file_name in file_list:
        path = os.path.join(dir_name, file_name)
        if not os.path.isfile(path):
            continue

        recipient = file_name
        relative = path[len(base):]
        if configuration['greylistByIPOnly'] > 0:
            m = regex_ip.match(relative)
        else:
            m = regex.match(relative)
        if not m:
            print 'Unknown path "%s" found in greylist directory.' % relative
            continue

        # get IP information
        groups = m.groups()
        ip_list = list(groups[:3])
        if groups[3] != None:
            ip_list.append(groups[4])
        else:
            ip_list.append('0')

        ip = string.join(ip_list, '.')
        sender = groups[5]

        #  look up expiration day
        data = {
            'envelope_sender': tumgreyspfsupp.unquote_address(sender),
            'envelope_recipient': tumgreyspfsupp.unquote_address(recipient),
            'client_address': ip,
        }
        config_data = tumgreyspfsupp.lookup_config(
            configuration.get('configPath'), data, configuration.copy())
        expiration_time = time.time() - (config_data['GREYLISTEXPIREDAYS'] *
                                         86400)

        #  check for expiration
        stat_data = os.stat(path)
        m_time = stat_data[8]
        c_time = stat_data[9]
        expired_auth = c_time < m_time and (time.time() - m_time) > (12 *
                                                                     3600)
        expired_after_auth = c_time < expiration_time

        #  check for expiration
        if expired_auth or expired_after_auth:
            os.remove(path)
            unlinked = 1

    # remove this directory and it's parents if empty
    if unlinked:
        current_directory = dir_name
        while len(current_directory) > len(base):
            try:
                os.rmdir(current_directory)
            except OSError:
                break
            current_directory = os.path.dirname(current_directory)


############################
#  main code
config = tumgreyspfsupp.process_config_file()
greylistBasedir = os.path.join(config['greylistDir'], 'client_address')
config['greylistBasedir'] = greylistBasedir
os.path.walk(greylistBasedir, visit, config)
